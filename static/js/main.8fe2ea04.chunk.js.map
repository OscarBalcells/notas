{"version":3,"sources":["Media.js","Asignaturas.js","Seleccionar.js","Tachar.js","Notas.js","App.js","serviceWorker.js","index.js"],"names":["Panel","Collapse","Media","props","state","notas","h1","h2","h3","h4","registradas","resultado","puntos","alemana","española","exists","isLoading","rangoAlemana","900","822","804","786","768","750","732","714","696","678","660","642","624","606","588","570","552","534","516","498","480","462","444","426","408","390","372","354","336","318","300","rangoEspañola","1","1.1","1.2","1.3","1.4","1.5","1.6","1.7","1.8","1.9","2","2.1","2.2","2.3","2.4","2.5","2.6","2.7","2.8","2.9","3","3.1","3.2","3.3","3.4","3.5","3.6","3.7","3.8","3.9","4","nombre","cnt","this","tachadas","forEach","asignatura","asignaturasSeleccionadas","push","setState","includes","length","h","value","console","log","total","totalNotas","siguientes","sort","i","cntTachada","message","error","toString","Math","round","rangos","Object","keys","setTimeout","afterLoading","bind","style","marginBottom","className","href","color","accordion","map","headerString","key","header","min","max","onChange","handleChange","marginTop","onClick","calcular","SyncOutlined","spin","PlayCircleOutlined","border","backgroundColor","React","Component","Asignaturas","required","type","colores","Seleccionar","addAsignatura","deleteAsignatura","asignaturas","index","CompleteAsignatura","width","onSelect","options","placeholder","filterOption","inputValue","option","toUpperCase","indexOf","Tachar","showInput","isReady","isAfterLoading","prevProps","types","done","oneLeft","finishLoading","CheckCircleOutlined","lines","split","CloseCircleOutlined","linea","fontSize","lineHeight","deleteTachada","PlusOutlined","addTachada","comprobar","renderComprobacion","Notas","seleccionadas","nuevas","changeSeleccionadas","nuevasTachadas","changeTachadas","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"4SAIQA,EAAUC,IAAVD,MAEaE,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,MAAO,CACHC,GAAI,GAAIC,GAAI,GACZC,GAAI,GAAIC,GAAI,IAEhBC,YAAa,GACbC,UAAW,CACPC,OAAQ,EACRC,QAAS,EACTC,cAAU,EACVC,QAAQ,EACRC,WAAW,IAGnB,EAAKC,aAAe,CAChBC,IAAK,EAAKC,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAC/FC,IAAK,EAAKC,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAC/FC,IAAK,EAAKC,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAC/FC,IAAK,GAET,EAAKC,mBAAgB,CACjBC,EAAM,GAAOC,IAAM,KAAMC,IAAK,KAAMC,IAAK,IAAMC,IAAK,KAAMC,IAAK,KAAMC,IAAK,EAAMC,IAAK,KAAMC,IAAK,KAAMC,IAAK,IAC3GC,EAAK,KAAMC,IAAK,KAAMC,IAAK,EAAMC,IAAK,KAAMC,IAAK,KAAMC,IAAK,IAAMC,IAAK,KAAMC,IAAK,KAAMC,IAAK,EAAMC,IAAK,KACxGC,EAAK,KAAMC,IAAK,IAAMC,IAAK,KAAMC,IAAK,KAAMC,IAAK,EAAMC,IAAK,KAAMC,IAAK,KAAMC,IAAK,IAAKC,IAAK,KAAMC,IAAK,KACvGC,EAAK,GA1BM,E,uDA8BRC,GACP,IAAIC,EAAM,EAIV,OAHAC,KAAKhF,MAAMiF,SAASC,SAAQ,SAACC,GACtBA,IAAeL,GAAQC,OAEvBA,I,0CAIb,IAAI7E,EAAQ8E,KAAK/E,MAAMC,MACnBK,EAAc,GAClByE,KAAKhF,MAAMoF,yBAAyBF,SAAQ,SAAAC,GAC3CjF,EAAMC,GAAGgF,GAAc,EACvBjF,EAAME,GAAG+E,GAAc,EACvBjF,EAAMG,GAAG8E,GAAc,EACvBjF,EAAMI,GAAG6E,GAAc,EACvB5E,EAAY8E,KAAKF,MAElBH,KAAKM,SAAS,CAAEpF,MAAOA,EAAOK,YAAaA,M,2CAGnB,IAAD,OACbA,EAAcyE,KAAK/E,MAAMM,YACzBL,EAAQ8E,KAAK/E,MAAMC,MACvB8E,KAAKhF,MAAMoF,yBAAyBF,SAAQ,SAAAC,GACpC,EAAKlF,MAAMM,YAAYgF,SAASJ,KAChC5E,EAAY8E,KAAKF,GACjBjF,EAAMC,GAAGgF,GAAc,EACvBjF,EAAME,GAAG+E,GAAc,EACvBjF,EAAMG,GAAG8E,GAAc,EACvBjF,EAAMI,GAAG6E,GAAc,MAG5B5E,EAAYiF,OAASR,KAAK/E,MAAMM,aAAayE,KAAKM,SAAS,CAAE/E,YAAaA,EAAaL,MAAOA,M,mCAG3FuF,EAAGN,EAAYO,GACrB,IAAIxF,EAAQ8E,KAAK/E,MAAMC,MACvBA,EAAMuF,GAAGN,GAAcO,EACvBV,KAAKM,SAAS,CAAEpF,MAAOA,M,iCAGf,IAAD,OACPyF,QAAQC,IAAIZ,KAAKhF,MAAMiF,SAAUD,KAAKhF,MAAMoF,0BAE5C,IAAIS,EAAQ,EACRC,EAAa,EAsBjB,GArBAd,KAAKhF,MAAMoF,yBAAyBF,SAAQ,SAAAC,GAaxC,IAAIY,EAAa,CAAC,EAAK9F,MAAMC,MAAMI,GAAG6E,GAAa,EAAKlF,MAAMC,MAAMC,GAAGgF,GAAa,EAAKlF,MAAMC,MAAME,GAAG+E,GAAa,EAAKlF,MAAMC,MAAMG,GAAG8E,IACzIY,EAAWC,OACX,IAAI,IAAIC,EAAI,EAAKC,WAAWf,GAAac,EAAI,GAAKH,EAAa,GAAIG,GAAK,EACpEJ,GAASE,EAAWE,GACpBH,GAAc,KAInBA,EAAa,GACZK,IAAQC,MAAM,wDAA0DN,EAAWO,gBADvF,CAIA,IAAM5F,EAAS6F,KAAKC,MAAOV,EAAQ,GAAM,GAAK,KAC1CnF,EAAU,EAAKC,EAAW,EAE9B,GAAc,MAAXF,EACCC,EAAU,MACVC,EAAW,WACR,GAAGF,EAAS,IACfC,EAAU,QACVC,EAAW,uBACR,CACH,IAAI6F,EAASC,OAAOC,KAAK1B,KAAKlE,cAC9B0F,EAAOR,OACP,IAAI,IAAIC,EAAIO,EAAOhB,OAAS,EAAGS,GAAK,EAAGA,IAAK,CACxC,GAAGxF,EAAS+F,EAAOP,GAAI,CAEnBtF,EAAwB,WADxBD,EAAWuF,EAAI,IAAMO,EAAOhB,OAAS,QAAUR,KAAKlE,aAAa0F,EAAOP,EAAI,KAC1C,SAAWjB,KAAKlC,mBAAcpC,GAChE,MACKiF,QAAQC,IAAI,OAAQY,EAAOP,KAI5C,IAAIzF,EAAY,CACZ,OAAU8F,KAAKC,MAAOV,EAAQ,GAAM,IACpC,QAAWnF,EACX,cAAYC,EACZ,QAAU,EACV,WAAa,GAEjBqE,KAAKM,SAAS,CAAE9E,UAAWA,IAC3BmG,WAAW3B,KAAK4B,aAAaC,KAAK7B,MAAO,Q,qCAIzC,IAAIxE,EAAYwE,KAAK/E,MAAMO,UAC3BA,EAAUK,WAAY,EACtBmE,KAAKM,SAAS,CAAE9E,UAAWA,M,+BAGrB,IAAD,OACL,GAA+C,IAA5CiG,OAAOC,KAAK1B,KAAK/E,MAAMC,MAAMC,IAAIqF,OAChC,OAAQ,8BAGZ,OACI,yBAAKsB,MAAO,CAACC,aAAa,SACtB,yBAAKC,UAAU,aAAf,yYAKI,6BAAM,6BALV,uFAMkF,uBAAGC,KAAK,8HAAR,QANlF,sGAOI,6BACA,wVAImE,0BAAMH,MAAO,CAACI,MAAM,QAApB,iHAGnE,6BAAM,6BAfV,2OAkBI,6BAAM,6BAlBV,qMAqBZ,kBAAC,IAAD,CAAUC,WAAS,EAACL,MAAO,CAAEC,aAAc,SAxBrB,CAAC,EAAG,EAAG,EAAG,GAyBLK,KAAI,SAAA3B,GACX,IAAI4B,EAKJ,OAJS,IAAN5B,EAAS4B,EAAe,2BACb,IAAN5B,EAAS4B,EAAe,4BAClB,IAAN5B,EAAS4B,EAAe,2BAClB,IAAN5B,IAAS4B,EAAe,4CAE5B,kBAACxH,EAAD,CAAOyH,IAAK7B,EAAG8B,OAAQF,GAClB,EAAKrH,MAAMoF,yBAAyBgC,KAAI,SAAAjC,GACrC,OACI,yBAAKmC,IAAKnC,GACN,iCAAOA,EAAP,KAAqB,EAAKlF,MAAMC,MAAM,IAAIuF,EAAEY,YAAYlB,IACxD,kBAAC,IAAD,CAAQqC,IAAK,EAAGC,IAAK,GAAIC,SAAU,SAAChC,GAAD,OAAW,EAAKiC,aAAa,IAAMlC,EAAEY,WAAYlB,EAAYO,IAAQA,MAAO,EAAKzF,MAAMC,MAAM,IAAIuF,EAAEY,YAAYlB,cAQ9K,kBAAC,IAAD,CACI+B,MAAM,aACNF,UAAU,oBACVF,MAAO,CAAEc,UAAW,QACpBC,QAAS,kBAAM,EAAKC,aAEnB9C,KAAK/E,MAAMO,UAAUK,WAClB,8BACI,kBAACkH,EAAA,EAAD,CAAcC,MAAI,IADtB,qBAKFhD,KAAK/E,MAAMO,UAAUK,WACnB,8BACI,kBAACoH,EAAA,EAAD,MADJ,oBAMyB,IAAhCjD,KAAK/E,MAAMO,UAAUI,SAAoBoE,KAAK/E,MAAMO,UAAUK,WAC3D,yBACImG,UAAU,wBACVF,MAAO,CACHoB,OAAQ,kBACRC,gBAAiB,6BAJzB,qBAOuBnD,KAAK/E,MAAMO,UAAUC,OAP5C,sEAQI,6BARJ,iBASmBuE,KAAK/E,MAAMO,UAAUE,QACpC,6BAVJ,qBAWoBsE,KAAK/E,MAAMO,UAAUG,oB,GA7N1ByH,IAAMC,WCyD1BC,EA/DG,CACd,QAAW,CACPC,UAAU,EACVC,KAAM,WAEV,aAAW,CACPD,UAAU,EACVC,KAAM,YAEV,QAAW,CACPD,UAAU,EACVC,KAAM,YAEV,YAAU,CACND,UAAU,EACVC,KAAM,YAEV,aAAW,CACPD,UAAU,EACVC,KAAM,YAEV,MAAS,CACLD,UAAU,EACVC,KAAM,SAEV,OAAU,CACND,UAAU,EACVC,KAAM,WAEV,SAAY,CACRD,UAAU,EACVC,KAAM,WAEV,OAAU,CACND,UAAU,EACVC,KAAM,WAEV,WAAc,CACVD,UAAU,EACVC,KAAM,YAEV,SAAY,CACRD,UAAU,EACVC,KAAM,YAEV,eAAa,CACTD,UAAU,EACVC,KAAM,YAEV,MAAS,CACLD,UAAU,EACVC,KAAM,SAEV,MAAS,CACLD,UAAU,EACVC,KAAM,SAEV,MAAS,CACLD,UAAU,EACVC,KAAM,UChDRC,EAAU,CAAC,UAAW,MAAO,UAAW,SAAU,OAAQ,WAAY,QAAS,OAAQ,OAAQ,WAAY,SAAU,QAAS,UAAW,OAAQ,UAAW,QAE7IC,E,kDACjB,WAAY1I,GAAQ,IAAD,8BACf,cAAMA,IAeV2I,cAAgB,SAAC7D,GACb,IAAIM,EAA2B,EAAKnF,MAAMmF,yBAC1CA,EAAyBC,KAAKP,GAE9B,EAAK9E,MAAM0H,SAAStC,GACpB,EAAKE,SAAS,CAAEF,yBAA0BA,KArB3B,EAwBnBwD,iBAAmB,SAAC9D,GAChB,IAAoC,IAAjCwD,EAAYxD,GAAQyD,SAAvB,CAKA,IADA,IAAInD,EAA2B,GACvBa,EAAI,EAAGA,EAAI,EAAKhG,MAAMmF,yBAAyBI,OAAQS,IACxD,EAAKhG,MAAMmF,yBAAyBa,KAAOnB,GACtCM,EAAyBC,KAAK,EAAKpF,MAAMmF,yBAAyBa,IAG9E,EAAKjG,MAAM0H,SAAStC,GACpB,EAAKE,SAAS,CAAEF,yBAA0BA,SAVtCe,IAAQC,MAAM,mCAxBlB,EAAKnG,MAAQ,CACT4I,YAAa,CACT,UAAW,aAAW,UAAW,YAAU,aAC3C,QAAS,SAAU,WAAY,SAC/B,aAAc,WAAY,eAC1B,QACA,QAAS,SAEbzD,yBAA0B,CACtB,UAAW,aAAW,UAAW,QAAS,aAAc,eAAa,UAX9D,E,qDAuCT,IAAD,OACL,OAAQ,yBAAK4B,UAAU,kBAClBhC,KAAK/E,MAAM4I,YAAYzB,KAAI,SAACtC,EAAQgE,GACjC,OAAG,EAAK7I,MAAMmF,yBAAyBG,SAAST,GAExC,kBAAC,IAAD,CACIwC,IAAKxC,EAAQkC,UAAU,aACvBE,MAAOuB,EAAQK,GACfjB,QAAS,kBAAM,EAAKe,iBAAiB9D,KAEpCA,GAKL,kBAAC,IAAD,CACIwC,IAAKxC,EAAQkC,UAAU,aACvBa,QAAS,kBAAM,EAAKc,cAAc7D,KAEjCA,W,GA3DYsD,IAAMC,W,oCCPzCI,EAAU,CAAC,UAAW,MAAO,UAAW,SAAU,OAAQ,WAAY,QAAS,OAAQ,OAAQ,WAAY,SAAU,QAAS,UAAW,OAAQ,UAAW,QAE5JM,EAAqB,SAAC/I,GAAD,OACvB,kBAAC,IAAD,CACI8G,MAAO,CAAEkC,MAAO,SAChBhC,UAAU,aACViC,SAAUjJ,EAAMiJ,SAChBC,QAASlJ,EAAMkJ,QACfC,YAAY,aACZC,aAAc,SAACC,EAAYC,GAAb,OACwD,IAAlEA,EAAO5D,MAAM6D,cAAcC,QAAQH,EAAWE,mBAKrCE,E,kDACjB,WAAYzJ,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTgF,SAAU,CAAC,SACXyE,WAAW,EACXC,SAAS,EACT9I,WAAW,EACX+I,gBAAgB,EAChBzD,QAAS,IARE,E,uDAYRrB,GACP,IAAIC,EAAM,EAIV,OAHAC,KAAK/E,MAAMgF,SAASC,SAAQ,SAACC,GACtBA,IAAeL,GAAQC,OAEvBA,I,iCAGAD,GACP,GAAGE,KAAKkB,WAAWpB,IAAW,EAC1BqB,IAAQC,MAAM,oEADlB,CAIA,IAAInB,EAAWD,KAAK/E,MAAMgF,SAC1BA,EAASI,KAAKP,GACdE,KAAKhF,MAAM0H,SAASzC,GACpBD,KAAKM,SAAS,CAAEL,SAAUA,EAAUyE,WAAW,O,oCAGrCZ,GACV,GAAa,IAAVA,EAAH,CAKA,IADA,IAAI7D,EAAW,GACPgB,EAAI,EAAGA,EAAIjB,KAAK/E,MAAMgF,SAASO,OAAQS,IAAQA,IAAM6C,GACzD7D,EAASI,KAAKL,KAAK/E,MAAMgF,SAASgB,IAEtCjB,KAAKhF,MAAM0H,SAASzC,GACpBD,KAAKM,SAAS,CAAEL,SAAUA,SARtBkB,IAAQC,MAAM,4D,sCAYlB,GAAGpB,KAAK/E,MAAMY,WAAoC,KAAvBmE,KAAK/E,MAAMkG,QAClC,OAAQ,gC,qCAKZnB,KAAKM,SAAS,CAAEsE,gBAAgB,EAAOD,SAAS,M,sCAIhD3E,KAAKM,SAAS,CAAEzE,WAAW,EAAO+I,gBAAgB,IAClDjD,WAAW3B,KAAK4B,aAAaC,KAAK7B,MAAO,O,yCAG1B6E,GACf,GAAGA,EAAUzE,yBAAyBI,OAASR,KAAKhF,MAAMoF,yBAAyBI,OAAQ,CAEvF,IADA,IAAIP,EAAW,GACPgB,EAAI,EAAGA,EAAIjB,KAAK/E,MAAMgF,SAASO,OAAQS,IACxCjB,KAAKhF,MAAMoF,yBAAyBG,SAASP,KAAK/E,MAAMgF,SAASgB,KAChEhB,EAASI,KAAKL,KAAK/E,MAAMgF,SAASgB,IAG1CjB,KAAKM,SAAS,CAAEL,SAAUA,O,kCAIrB,IAAD,OACR,GAAID,KAAK/E,MAAM0J,QAAf,CACA,IAAIxD,EAAU,GACV2D,EAAQ,CACR,QAAW,EAAG,MAAS,EAAG,SAAY,EACtC,QAAW,EAAG,SAAY,EAAG,WAAc,EAC3C,MAAS,EAAG,MAAS,GAEzB9E,KAAKhF,MAAMoF,yBAAyBF,SAAQ,SAACJ,GACT,aAA7BwD,EAAYxD,GAAQ0D,KAAqBsB,EAAMxB,EAAYxD,GAAQ0D,OAAS,EACtE,EAAKvI,MAAMgF,SAASM,SAAST,KAASgF,EAAK,UAAgB,GACtD,eAAXhF,IAAyBgF,EAAK,YAAkB,MAEvD9E,KAAK/E,MAAMgF,SAASC,SAAQ,SAACJ,GACO,aAA7BwD,EAAYxD,GAAQ0D,OAAqBsB,EAAMxB,EAAYxD,GAAQ0D,OAAS,GACjE,eAAX1D,IAAyBgF,EAAK,YAAkB,MAIpDA,EAAK,QAAc,IAAG3D,GAAW,gDAEjC2D,EAAK,MAAY,IAAG3D,GAAW,4CAE/B2D,EAAK,SAAe,IAAG3D,GAAW,oFAElC2D,EAAK,QAAc,IAAG3D,GAAW,mEAEjC2D,EAAK,QAAc,IAAG3D,GAAW,4EAEjC2D,EAAK,WAAiB,IAAG3D,GAAW,oDAEpC2D,EAAK,MAAY,IAAG3D,GAAW,uDAIlC,IAAI4D,GAAO,EACX/E,KAAKhF,MAAMoF,yBAAyBF,SAAQ,SAACJ,IACrCiF,GAAqC,aAA7BzB,EAAYxD,GAAQ0D,MAAuB,EAAKtC,WAAWpB,GAAU,IAC7Ea,QAAQC,IAAId,GACZqB,GAAW,yFACX4D,GAAO,MAIf,IAAIC,EAAU,EACdF,EAAK,SAAe,EACpB9E,KAAKhF,MAAMoF,yBAAyBF,SAAQ,SAACJ,GACT,aAA7BwD,EAAYxD,GAAQ0D,MAAoD,YAA7BF,EAAYxD,GAAQ0D,MAC/B,IAA5B,EAAKtC,WAAWpB,KAAekF,GAAW,GAEjB,aAA7B1B,EAAYxD,GAAQ0D,OACnBsB,EAAK,UAAgB,EACrBA,EAAK,UAAgB,EAAK5D,WAAWpB,OAG1CgF,EAAK,QAAcA,EAAK,SAAeE,EAAU,KAChD7D,GAAW,mNAA+M2D,EAAK,QAAcA,EAAK,SAAeE,GAAS3D,WAAa,OAG3R0D,GAAO,EACP/E,KAAKhF,MAAMoF,yBAAyBF,SAAQ,SAACJ,GACrCiF,GAAoC,IAA5B,EAAK7D,WAAWpB,KACxBqB,GAAW,mEACX4D,GAAO,MAIA,KAAZ5D,IAAgBA,EAAU,4BAC7BnB,KAAKM,SAAS,CAAEqE,SAAS,EAAO9I,WAAW,EAAMsF,QAASA,IAC1DQ,WAAW3B,KAAKiF,cAAcpD,KAAK7B,MAAO,IAAMA,S,2CAIhD,GAA0B,KAAvBA,KAAK/E,MAAMkG,SAAkBnB,KAAK/E,MAAMY,UACvC,OAAQ,8BAEZ,GAA0B,6BAAvBmE,KAAK/E,MAAMkG,QACV,OACI,yBAAKa,UAAU,wBACXF,MAAO,CACHoB,OAAQ,kBACRC,gBAAiB,6BAGrB,kBAAC+B,EAAA,EAAD,MANJ,uCAYR,IAAMC,EAAQnF,KAAK/E,MAAMkG,QAAQiE,MAAM,MACvC,OACI,yBAAKpD,UAAU,wBACXF,MAAO,CACHoB,OAAQ,gBACRC,gBAAiB,6BAGrB,kBAACkC,EAAA,EAAD,MANJ,kCASI,6BACCF,EAAM/C,KAAI,SAACkD,EAAOxB,GACf,OAAGwB,EAAM9E,QAAU,EAAW,0BAAM8B,IAAKwB,IAErC,0BAAMxB,IAAKwB,GAAO,8BAAQA,EAAQ,GAAGzC,WAAa,IAAlD,SAA+DiE,S,+BAOzE,IAAD,OACL,OACI,6BACI,yBAAKtD,UAAU,YAAYF,MAAO,CAAEC,aAAc,SAAlD,4OAGI,6BAAM,6BACN,0BAAMD,MAAO,CAAEyD,SAAU,SAAUC,WAAY,aAA/C,gBACa,uBAAG1D,MAAO,CAAEI,MAAO,YAAnB,MADb,6BAEkB,uBAAGJ,MAAO,CAAEI,MAAO,YAA2D,EAA7ClC,KAAKhF,MAAMoF,yBAAyBI,OAAaR,KAAK/E,MAAMgF,SAASO,QAFxH,gCAGqB,uBAAGsB,MAAO,CAAEI,MAAqD,EAA7ClC,KAAKhF,MAAMoF,yBAAyBI,OAAaR,KAAK/E,MAAMgF,SAASO,OAAS,GAAK,EAAI,QAAU,YACvF,EAA7CR,KAAKhF,MAAMoF,yBAAyBI,OAAaR,KAAK/E,MAAMgF,SAASO,OAAS,GAAK,EACtC,EAA7CR,KAAKhF,MAAMoF,yBAAyBI,OAAaR,KAAK/E,MAAMgF,SAASO,OAAS,GAAK,GALzF,2BASHR,KAAK/E,MAAMgF,SAASmC,KAAI,SAACtC,EAAQgE,GAC9B,OACI,kBAAC,IAAD,CACIxB,IAAKxC,EAASgE,EAAMzC,WACpBa,MAAOuB,EAAQK,GACf9B,UAAU,aACVa,QAAS,kBAAM,EAAK4C,cAAc3B,KAEjChE,OAIXE,KAAK/E,MAAMyJ,WAA2D,EAA7C1E,KAAKhF,MAAMoF,yBAAyBI,OAAaR,KAAK/E,MAAMgF,SAASO,OAAS,GAAK,GAC1G,kBAAC,IAAD,CACIwB,UAAU,kBACVa,QAAS,kBAAM,EAAKvC,SAAS,CAAEoE,WAAW,MAE1C,kBAACgB,EAAA,EAAD,MAJJ,mBAOH1F,KAAK/E,MAAMyJ,WACR,kBAAC,EAAD,CACIT,SAAU,SAACK,GAAD,OAAY,EAAKqB,WAAWrB,IACtCJ,QAASlE,KAAKhF,MAAMoF,yBAAyBgC,KAAI,SAACjC,GAC9C,MAAO,CAAE,MAASA,QAI7BH,KAAK/E,MAAM0J,SACR,kBAAC,IAAD,CAAKzC,MAAM,aACPF,UAAU,oBACVa,QAAS,kBAAM,EAAK+C,cAErB,kBAAC3C,EAAA,EAAD,MAJH,mBAQHjD,KAAK/E,MAAMY,WACR,kBAAC,IAAD,CAAKqG,MAAM,aACPF,UAAU,oBACVa,QAAS,kBAAM,EAAK+C,cAEpB,kBAAC7C,EAAA,EAAD,CAAcC,MAAI,IAJtB,mBASHhD,KAAK/E,MAAM2J,gBAAyC,6BAAvB5E,KAAK/E,MAAMkG,SACrC,kBAAC,IAAD,CAAKe,MAAM,UACPF,UAAU,oBACVF,MAAO,CAAEkC,MAAO,UAEhB,kBAACkB,EAAA,EAAD,MAJJ,gCASHlF,KAAK/E,MAAM2J,gBAAyC,6BAAvB5E,KAAK/E,MAAMkG,SACrC,kBAAC,IAAD,CAAKe,MAAM,QACPF,UAAU,oBACVF,MAAO,CAAEkC,MAAO,UAEhB,kBAACqB,EAAA,EAAD,MAJJ,kCASHrF,KAAK6F,0B,GA3QczC,IAAMC,WCfrByC,E,kDACnB,WAAY9K,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACX8K,cAAe,CACb,UAAW,aAAW,UAAW,QAAS,aAAc,eAAa,SAEvE9F,SAAU,CACR,UAPa,E,gEAYC+F,GAClBhG,KAAKM,SAAS,CAAEyF,cAAeC,M,qCAGlBA,GACbhG,KAAKM,SAAS,CAAEL,SAAU+F,M,+BAGlB,IAAD,OACP,OACE,6BACE,yBAAKhE,UAAU,UAAf,+BAGA,kBAAC,EAAD,CACEU,SAAU,SAACsD,GAAD,OAAY,EAAKC,oBAAoBD,MAEjD,yBAAKhE,UAAU,UAAf,0DAGA,kBAAC,EAAD,CACE5B,yBAA0BJ,KAAK/E,MAAM8K,cACrCrD,SAAU,SAACwD,GAAD,OAAoB,EAAKC,eAAeD,MAEpD,yBAAKlE,UAAU,UAAf,mDAGA,kBAAC,EAAD,CACE5B,yBAA0BJ,KAAK/E,MAAM8K,cACrC9F,SAAUD,KAAK/E,MAAMgF,gB,GA1CImD,IAAMC,WCiB1B+C,MAnBf,WACE,OACE,yBAAKpE,UAAU,OACb,yBAAKA,UAAU,UAAf,iCAGA,yBAAKA,UAAU,aAAf,0RAKE,6BAAM,6BALR,kDAM2C,uBAAGC,KAAK,8HAAR,QAN3C,mBAMqM,uBAAGA,KAAK,sJAAR,aANrM,+DAMqa,uBAAGA,KAAK,8FAAR,QANra,6HAQA,kBAAC,EAAD,QCNcoE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAjG,GACLT,QAAQS,MAAMA,EAAMD,a","file":"static/js/main.8fe2ea04.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Tag, Collapse, Slider, message } from 'antd';\nimport { PlayCircleOutlined, SyncOutlined } from '@ant-design/icons'\nconst { Panel } = Collapse;\n\nexport default class Media extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            notas: {\n                h1: {}, h2: {},\n                h3: {}, h4: {},\n            },\n            registradas: [],\n            resultado: {\n                puntos: 0,\n                alemana: 0,\n                española: 0,\n                exists: false,\n                isLoading: false\n            },\n        }\n        this.rangoAlemana = {\n            900: 1.0, 822: 1.1, 804: 1.2, 786: 1.3, 768: 1.4, 750: 1.5, 732: 1.6, 714: 1.7, 696: 1.8, 678: 1.9,\n            660: 2.0, 642: 2.1, 624: 2.2, 606: 2.3, 588: 2.4, 570: 2.5, 552: 2.6, 534: 2.7, 516: 2.8, 498: 2.9,\n            480: 3.0, 462: 3.1, 444: 3.2, 426: 3.3, 408: 3.4, 390: 3.5, 372: 3.6, 354: 3.7, 336: 3.8, 318: 3.9,\n            300: 4.0\n        };\n        this.rangoEspañola = {\n            1.0:  10.00, 1.1:  9.83, 1.2: 9.67, 1.3: 9.50, 1.4: 9.33, 1.5: 9.17, 1.6: 9.00, 1.7: 8.83, 1.8: 8.67, 1.9: 8.50,\n            2.0: 8.33, 2.1: 8.17, 2.2: 8.00, 2.3: 7.83, 2.4: 7.67, 2.5: 7.50, 2.6: 7.33, 2.7: 7.17, 2.8: 7.00, 2.9: 6.83,\n            3.0: 6.67, 3.1: 6.50, 3.2: 6.33, 3.3: 6.17, 3.4: 6.00, 3.5: 5.83, 3.6: 5.67, 3.7: 5.5, 3.8: 5.33, 3.9: 5.17,\n            4.0: 5.00\n        };\n    }\n\n    cntTachada(nombre) {\n        let cnt = 0;\n        this.props.tachadas.forEach((asignatura) => {\n            if(asignatura === nombre) cnt++;\n        });\n        return cnt;\n    }\n\n\tcomponentDidMount() {\n\t\tlet notas = this.state.notas;\n\t\tlet registradas = [];\n\t\tthis.props.asignaturasSeleccionadas.forEach(asignatura => {\n\t\t\tnotas.h1[asignatura] = 5;\n\t\t\tnotas.h2[asignatura] = 5;\n\t\t\tnotas.h3[asignatura] = 5;\n\t\t\tnotas.h4[asignatura] = 5;\n\t\t\tregistradas.push(asignatura);\n\t\t});\n\t\tthis.setState({ notas: notas, registradas: registradas });\n    }\n\n    componentDidUpdate() {\n        let registradas = this.state.registradas;\n        let notas = this.state.notas;\n        this.props.asignaturasSeleccionadas.forEach(asignatura => {\n            if(!this.state.registradas.includes(asignatura)) {\n                registradas.push(asignatura);\n                notas.h1[asignatura] = 5;\n                notas.h2[asignatura] = 5;\n                notas.h3[asignatura] = 5;\n                notas.h4[asignatura] = 5;\n            }\n        });\n        if(registradas.length > this.state.registradas) this.setState({ registradas: registradas, notas: notas });\n    }\n\n\thandleChange(h, asignatura, value) {\n        let notas = this.state.notas;\n        notas[h][asignatura] = value;\n        this.setState({ notas: notas });\n    }\n\n    calcular() {\n        console.log(this.props.tachadas, this.props.asignaturasSeleccionadas);\n        //(valor medio de los resultados semestrales contabilizados) x 40\n        let total = 0;\n        let totalNotas = 0;\n        this.props.asignaturasSeleccionadas.forEach(asignatura => {\n            /*\n            if( Asignaturas[asignatura].required) { //de momento no se aplica\n                total += notas.h4[asignatura];\n                let siguientes = [notas.h1[asignatura], notas.h2[asignatura], notas.h3[asignatura]];\n                siguientes.sort();\n                const cnt = this.tachadasCnt(asignatura);\n                for(let i = cnt; i < 3 && totalNotas < 36; i += 1) {\n                    total += siguientes[i];\n                    totalNotas += 1;\n                }\n            } else {\n            */\n            let siguientes = [this.state.notas.h4[asignatura], this.state.notas.h1[asignatura], this.state.notas.h2[asignatura], this.state.notas.h3[asignatura]];\n            siguientes.sort();\n            for(let i = this.cntTachada(asignatura); i < 4 && totalNotas < 36; i += 1) {\n                total += siguientes[i];\n                totalNotas += 1;\n            }\n        });\n\n        if(totalNotas < 36) {\n            message.error(\"No llegas a las 36 notas necesarias, tienes tan solo \" + totalNotas.toString());\n            return;\n        }\n        const puntos = Math.round((total / 36) * 40 * 1.5); //1.5 para simular el otro tercio\n        let alemana = 0.0, española = 0.0;\n\n        if(puntos === 300) {\n            alemana = \"4,0\";\n            española = \"5,0\";\n        } else if(puntos < 300) {\n            alemana = \"> 4,0\";\n            española = \"< 5,0 (Suspenso)\";\n        } else {\n            let rangos = Object.keys(this.rangoAlemana);\n            rangos.sort();\n            for(let i = rangos.length - 1; i >= 0; i--) {\n                if(puntos > rangos[i]) {\n                    alemana = (i + 1 === rangos.length ? \"< 1,0\" : this.rangoAlemana[rangos[i + 1]]);\n                    española = (alemana === \"< 1.0\" ? \"> 10,0\" : this.rangoEspañola[alemana]);\n                    break;\n                } else { console.log(\"Nope\", rangos[i]) }\n            }\n        }\n\n        let resultado = {\n            \"puntos\": Math.round((total / 36) * 40),\n            \"alemana\": alemana,\n            \"española\": española,\n            \"exists\": true,\n            \"isLoading\": true,\n        }\n        this.setState({ resultado: resultado });\n        setTimeout(this.afterLoading.bind(this), 3000);\n    }\n\n    afterLoading() {\n        let resultado = this.state.resultado;\n        resultado.isLoading = false;\n        this.setState({ resultado: resultado });\n    }\n\n    render() {\n        if(Object.keys(this.state.notas.h1).length === 0) {\n            return (<div></div>);\n        }\n        const halbajhrs = [1, 2, 3, 4];\n        return (\n            <div style={{marginBottom:\"50px\"}}>\n                <div className=\"subtitulo\">\n                    Con los ajustes que has realizado podrás calcular la nota media que tendrás de todos los semestres.\n                    Las cuatro notas semestrales son 2 tercios de tu nota global, 600 de los 900 puntos que puedes conseguir en total.\n                    Las notas de este último semestre son bastante predecibles con la mayoría de profes por lo que esta nota se supone\n                    que se tiene que acercar bastante a la realidad.\n                    <br /><br />\n                    Por cierto, también es importante mencionar el punto 1) c) del apartado §7 de <a href=\"https://github.com/OscarBalcells/notas/blob/master/public/Normativa_para_la_obtención_del_Allgemeine_Hochschulreife.pdf\">este</a> documento, que creo que quiere decir que es muy estúpido no esforzarse este último semestre:\n                    <br />\n                    <b>\n                        En caso de que una asignatura obligatoria extracurricular aprobada sobre la base de una\n                        regulación de caso individual no se incluya en las asignaturas del examen Abitur\n                        del examinando, el examinando deberá obtener más de 0 puntos en dicha\n                        asignatura en cualquier semestre de la fase de cualificación y <span style={{color:\"red\"}}> el resultado obtenido\n                        en como mínimo el último semestre deberá computarse para la calificación.</span>\n                    </b>\n                    <br /><br />\n                    De momento esta última condición no la aplico porque no tengo muy clara la definición de \"asignatura obligatoria extracurricular aprobada\n                    sobre la base de una regulación de caso individual\" pero la menciono por si acaso.\n                    <br /><br />\n                    Por último, este programa también hace una conversión automática de los puntos raros del abitur (0 - 900) a nota española (0 - 10) y a nota tradicional alemana (1 - 6) con comas.\n                </div>\n\t\t\t\t<Collapse accordion style={{ marginBottom: \"15px\" }}>\n                    {halbajhrs.map(h => {\n                        let headerString;\n                        if(h === 1) headerString = \"Primer Halbjahr Clase 11\";\n                        else if(h === 2) headerString = \"Segundo Halbjahr Clase 11\";\n                        else if(h === 3) headerString = \"Primer Halbjahr Clase 12\";\n                        else if(h === 4) headerString = \"Segundo Halbjahr Clase 12 (Predicciones)\";\n                        return (\n                            <Panel key={h} header={headerString}>\n                                {this.props.asignaturasSeleccionadas.map(asignatura => {\n                                    return (\n                                        <div key={asignatura}>\n                                            <div> {asignatura}: {this.state.notas[\"h\"+h.toString()][asignatura]}</div>\n                                            <Slider min={0} max={15} onChange={(value) => this.handleChange(\"h\" + h.toString(), asignatura, value)} value={this.state.notas[\"h\"+h.toString()][asignatura]} />\n                                        </div>\n                                    );\n                                })}\n                            </Panel>\n                        );\n                    })}\n\t\t\t\t</Collapse>\n                <Tag\n                    color=\"processing\"\n                    className=\"botonComprobacion\"\n                    style={{ marginTop: \"15px\" }}\n                    onClick={() => this.calcular()}\n                >\n                    {this.state.resultado.isLoading &&\n                        <span>\n                            <SyncOutlined spin /> &nbsp;\n                            Calculando\n                        </span>\n                    }\n                    {!this.state.resultado.isLoading &&\n                        <span>\n                            <PlayCircleOutlined /> &nbsp;\n                            Calcular\n                        </span>\n                    }\n                </Tag>\n                {this.state.resultado.exists === true && !this.state.resultado.isLoading &&\n                    <div\n                        className=\"resultadoComprobacion\"\n                        style={{\n                            border: \"1px solid green\",\n                            backgroundColor: \"rgba(115, 240, 115, 0.1)\",\n                        }}\n                    >\n                        Puntos de Abitur: {this.state.resultado.puntos}/600 (tranqui que te faltan todavia los 300 de las Abiprüfungen)\n                        <br />\n                        Nota alemana: {this.state.resultado.alemana}\n                        <br />\n                        Nota española: {this.state.resultado.española}\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n","var Asignaturas = {\n    \"Deutsch\": {\n        required: true,\n        type: \"Deutsch\",\n    },\n    \"Español\": {\n        required: true,\n        type: \"Language\"\n    },\n    \"English\": {\n        required: true,\n        type: \"Language\"\n    },\n    \"Català\": {\n        required: false,\n        type: \"Language\"\n    },\n    \"Francés\": {\n        required: false,\n        type: \"Language\"\n    },\n    \"Mathe\": {\n        required: true,\n        type: \"Mathe\"\n    },\n    \"Physik\": {\n        required: false,\n        type: \"Science\"\n    },\n    \"Biologie\": {\n        required: false,\n        type: \"Science\"\n    },\n    \"Chemie\": {\n        required: false,\n        type: \"Science\"\n    },\n    \"Geschichte\": {\n        required: true,\n        type: \"SScience\"\n    },\n    \"Erdkunde\": {\n        required: false,\n        type: \"SScience\"\n    },\n    \"Filosofía\": {\n        required: true,\n        type: \"SScience\"\n    },\n    \"Sport\": {\n        required: false,\n        type: \"Sport\"\n    },\n    \"Kunst\": {\n        required: false,\n        type: \"Kunst\"\n    },\n    \"Musik\": {\n        required: false,\n        type: \"Kunst\"\n    }\n}\n\nexport default Asignaturas;","import React from 'react';\nimport './App.css';\nimport { message, Tag } from 'antd';\nimport Asignaturas from './Asignaturas.js';\n\n/*\nDeutsch, Español, English, Català, Francés\nMathe, Physik, Biologie, Chemie\nGeschichte, Erdkunde, Filosofia,\nSport, Kunst, Musik\n*/\nconst colores = [\"magenta\", \"red\", \"volcano\", \"orange\", \"blue\", \"geekblue\", \"green\", \"cyan\", \"blue\", \"geekblue\", \"purple\", \"green\", \"volcano\", \"blue\", \"magenta\", \"cyan\"];\n\nexport default class Seleccionar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            asignaturas: [\n                \"Deutsch\", \"Español\", \"English\", \"Català\", \"Francés\",\n                \"Mathe\", \"Physik\", \"Biologie\", \"Chemie\",\n                \"Geschichte\", \"Erdkunde\", \"Filosofía\",\n                \"Sport\",\n                \"Kunst\", \"Musik\"\n            ],\n            asignaturasSeleccionadas: [\n                \"Deutsch\", \"Español\", \"English\", \"Mathe\", \"Geschichte\", \"Filosofía\", \"Sport\"\n            ],\n        };\n    }\n\n    addAsignatura = (nombre) => {\n        let asignaturasSeleccionadas = this.state.asignaturasSeleccionadas;\n        asignaturasSeleccionadas.push(nombre);\n\n        this.props.onChange(asignaturasSeleccionadas);\n        this.setState({ asignaturasSeleccionadas: asignaturasSeleccionadas });\n    }\n\n    deleteAsignatura = (nombre) => {\n        if(Asignaturas[nombre].required === true) {\n            message.error(\"Esta asignatura es obligatoria\");\n            return;\n        }\n        let asignaturasSeleccionadas = [];\n        for(let i = 0; i < this.state.asignaturasSeleccionadas.length; i++) {\n            if(this.state.asignaturasSeleccionadas[i] !== nombre) {\n                    asignaturasSeleccionadas.push(this.state.asignaturasSeleccionadas[i]);\n            }\n        }\n        this.props.onChange(asignaturasSeleccionadas);\n        this.setState({ asignaturasSeleccionadas: asignaturasSeleccionadas });\n    }\n\n    render() {\n        return (<div className=\"divAsignaturas\">\n            {this.state.asignaturas.map((nombre, index) => {\n                if(this.state.asignaturasSeleccionadas.includes(nombre)) {\n                    return (\n                        <Tag\n                            key={nombre} className=\"asignatura\"\n                            color={colores[index]}\n                            onClick={() => this.deleteAsignatura(nombre)}\n                        >\n                            {nombre}\n                        </Tag>\n                    );\n                } else {\n                    return (\n                        <Tag\n                            key={nombre} className=\"asignatura\"\n                            onClick={() => this.addAsignatura(nombre)}\n                        >\n                            {nombre}\n                        </Tag>\n                    );\n                }\n            })}\n        </div>);\n    }\n}","import React from 'react';\nimport './App.css';\nimport { message, AutoComplete, Tag } from 'antd';\nimport { CloseCircleOutlined, PlusOutlined, PlayCircleOutlined, SyncOutlined, CheckCircleOutlined } from '@ant-design/icons';\nimport Asignaturas from './Asignaturas.js';\n\nconst colores = [\"magenta\", \"red\", \"volcano\", \"orange\", \"blue\", \"geekblue\", \"green\", \"cyan\", \"blue\", \"geekblue\", \"purple\", \"green\", \"volcano\", \"blue\", \"magenta\", \"cyan\"]\n\nconst CompleteAsignatura = (props) => (\n    <AutoComplete\n        style={{ width: \"100px\" }}\n        className=\"asignatura\"\n        onSelect={props.onSelect}\n        options={props.options}\n        placeholder=\"Asignatura\"\n        filterOption={(inputValue, option) =>\n            option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n        }\n    />\n);\n\nexport default class Tachar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tachadas: [\"Sport\"],\n            showInput: false,\n            isReady: true, //three phases\n            isLoading: false,\n            isAfterLoading: false,\n            message: \"\"\n        };\n    }\n\n    cntTachada(nombre) {\n        let cnt = 0;\n        this.state.tachadas.forEach((asignatura) => {\n            if(asignatura === nombre) cnt++;\n        });\n        return cnt;\n    }\n\n    addTachada(nombre) {\n        if(this.cntTachada(nombre) >= 4) {\n            message.error(\"No puedes tachar más de 4 notas para una misma asignatura\");\n            return;\n        }\n        let tachadas = this.state.tachadas;\n        tachadas.push(nombre);\n        this.props.onChange(tachadas);\n        this.setState({ tachadas: tachadas, showInput: false });\n    }\n\n    deleteTachada(index) {\n        if(index === 0) {\n            message.error(\"Se tiene que tachar como mínimo una nota de deporte\");\n            return;\n        }\n        let tachadas = [];\n        for(let i = 0; i < this.state.tachadas.length; i++) if(i !== index) {\n            tachadas.push(this.state.tachadas[i]);\n        }\n        this.props.onChange(tachadas);\n        this.setState({ tachadas: tachadas });\n    }\n\n    renderMessage() {\n        if(this.state.isLoading || this.state.message === \"\") {\n            return (<div></div>);\n        }\n    }\n\n    afterLoading() {\n        this.setState({ isAfterLoading: false, isReady: true });\n    }\n\n    finishLoading() {\n        this.setState({ isLoading: false, isAfterLoading: true });\n        setTimeout(this.afterLoading.bind(this), 3000);\n    }\n\n    componentDidUpdate(prevProps) {\n        if(prevProps.asignaturasSeleccionadas.length > this.props.asignaturasSeleccionadas.length) {\n            let tachadas = [];\n            for(let i = 0; i < this.state.tachadas.length; i++) {\n                if(this.props.asignaturasSeleccionadas.includes(this.state.tachadas[i])) {\n                    tachadas.push(this.state.tachadas[i]);\n                }\n            }\n            this.setState({ tachadas: tachadas });\n        }\n    }\n\n    comprobar() {\n        if(!this.state.isReady) return;\n        let message = \"\";\n        let types = {\n            \"Deutsch\": 0, \"Mathe\": 0, \"Language\": 0,\n            \"Science\": 0, \"SScience\": 0, \"Geschichte\": 0,\n            \"Kunst\": 0, \"Sport\": 0\n        };\n        this.props.asignaturasSeleccionadas.forEach((nombre) => {\n            if(Asignaturas[nombre].type !== \"Language\") types[Asignaturas[nombre].type] += 4;\n            else if(!this.state.tachadas.includes(nombre)) types[\"Language\"] += 4;\n            if(nombre === \"Geschichte\") types[\"Geschichte\"] += 4;\n        });\n        this.state.tachadas.forEach((nombre) => {\n            if(Asignaturas[nombre].type !== \"Language\") types[Asignaturas[nombre].type] -= 1;\n            if(nombre === \"Geschichte\") types[\"Geschichte\"] -= 1;\n        });\n\n        //1. 4 de alemán\n        if(types[\"Deutsch\"] < 4) message += \"No puedes tachar ninguna nota de alemán\\n\";\n        //2. 4 de mates\n        if(types[\"Mathe\"] < 4) message += \"No puedes tachar ninguna nota de mates\\n\";\n        //3. 4 de algún idioma (no alemán)\n        if(types[\"Language\"] < 4) message += \"Necesitas las 4 notas semestrales de al menos un idioma (que no sea alemán)\\n\";\n        //4. minimo 4 de ciencias\n        if(types[\"Science\"] < 4) message += \"Necesitas como mínimo 4 notas de ciencias (PHY, BIO o CHM)\\n\";\n        //5. minimo 4 de ciencias sociales\n        if(types[\"Science\"] < 4) message += \"Necesitas como mínimo 4 notas de ciencias sociales (PHI, ERK o GES)\\n\";\n        //6. minimo 2 de geschichte\n        if(types[\"Geschichte\"] < 2) message += \"Necesitas como mínimo 2 notas de Geschichte\\n\";\n        //7. minimo 3 de kunst o musik\n        if(types[\"Kunst\"] < 3) message += \"Necesitas como mínimo 3 notas de Kunst o Musik\\n\";\n        //8. maximo 3 de deporte\n        //implicito\n        //9. minimo 2 de todos los idiomas\n        let done = false;\n        this.props.asignaturasSeleccionadas.forEach((nombre) => {\n            if(!done && Asignaturas[nombre].type === \"Language\" && this.cntTachada(nombre) > 2) {\n                console.log(nombre);\n                message += \"Para cada asignatura de idiomas has de contabilizar (no tachar) por lo menos 2 notas\\n\";\n                done = true;\n            }\n        });\n        //10. minimo 14 entre ciencias e idiomas\n        let oneLeft = 0;\n        types[\"Language\"] = 0;\n        this.props.asignaturasSeleccionadas.forEach((nombre) => {\n            if(Asignaturas[nombre].type === \"Language\" || Asignaturas[nombre].type === \"Science\") {\n                if(this.cntTachada(nombre) === 3) oneLeft += 1;\n            }\n            if(Asignaturas[nombre].type === \"Language\") {\n                types[\"Language\"] += 4;\n                types[\"Language\"] -= this.cntTachada(nombre);\n            }\n        });\n        if(types[\"Science\"] + types[\"Language\"] - oneLeft < 14) {\n            message += \"Entre ciencias naturales e idiomas (exceptuando alemán) has de contabilizar 14 notas semestrales. Solo contabilizan las notas de las asignaturas que no tengan 3 o más notas tachadas, de momento tienes \" + (types[\"Science\"] + types[\"Language\"] - oneLeft).toString() + \".\\n\";\n        }\n        //11. No puedes contar solo 1 nota de cualquier asignatura (?)\n        done = false;\n        this.props.asignaturasSeleccionadas.forEach((nombre) => {\n            if(!done && this.cntTachada(nombre) === 4) {\n                message += \"Has de contabilizar como mínimo una nota de cada asignatura\\n\";\n                done = true;\n            }\n        });\n\n        if(message === \"\") message = \"Combinación válida\";\n        this.setState({ isReady: false, isLoading: true, message: message });\n        setTimeout(this.finishLoading.bind(this), 2000, this);\n    }\n\n    renderComprobacion() {\n        if(this.state.message === \"\" || this.state.isLoading) {\n            return (<div></div>);\n        }\n        if(this.state.message === \"Combinación válida\") {\n            return(\n                <div className=\"resultadoComprobacion\"\n                    style={{\n                        border: \"1px solid green\",\n                        backgroundColor: \"rgba(115, 240, 115, 0.1)\",\n                    }}\n                >\n                    <CheckCircleOutlined />\n                    &nbsp;\n                    La combinación es válida\n                </div>\n            );\n        }\n        const lines = this.state.message.split(\"\\n\");\n        return (\n            <div className=\"resultadoComprobacion\"\n                style={{\n                    border: \"1px solid red\",\n                    backgroundColor: \"rgba(240, 110, 110, 0.1)\"\n                }}\n            >\n                <CloseCircleOutlined />\n                &nbsp;\n                Combinación inválida\n                <br />\n                {lines.map((linea, index) => {\n                    if(linea.length <= 2) return (<span key={index}></span>);\n                    else return (\n                        <span key={index}><br />{(index + 1).toString() + \".\"} &nbsp; {linea}</span>\n                    );\n                })}\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"subtitulo\" style={{ marginBottom: \"20px\" }}>\n                    Para cada nota semestral que quieras sacar añade la asignatura. Solo puedes tachar notas de asignaturas que no tengas como examen del Abitur. Es obligatorio tachar como mínimo una nota de deporte, por eso está ahí puesta.\n\n                    <br /><br />\n                    <span style={{ fontSize: \"1.1rem\", lineHeight: \"0.05 rem\" }}>\n                    Solo cuentan <b style={{ color: \"#4633FF\" }}>36</b> notas.\n                    De momento tienes <b style={{ color: \"#3361FF\" }}>{this.props.asignaturasSeleccionadas.length * 4 - this.state.tachadas.length}</b> notas,\n                    por lo que te quedan <b style={{ color: (this.props.asignaturasSeleccionadas.length * 4 - this.state.tachadas.length - 36 > 0 ? \"green\" : \"#F43939\") }}>\n                        {(this.props.asignaturasSeleccionadas.length * 4 - this.state.tachadas.length - 36 > 0\n                        ? this.props.asignaturasSeleccionadas.length * 4 - this.state.tachadas.length - 36 : 0)}\n                    </b> tachadas disponibles.\n                    </span>\n                </div>\n                {this.state.tachadas.map((nombre, index) => {\n                    return (\n                        <Tag\n                            key={nombre + index.toString()}\n                            color={colores[index]}\n                            className=\"asignatura\"\n                            onClick={() => this.deleteTachada(index)}\n                        >\n                            {nombre}\n                        </Tag>\n                    );\n                })}\n                {!this.state.showInput && (this.props.asignaturasSeleccionadas.length * 4 - this.state.tachadas.length - 36 > 0) &&\n                    <Tag\n                        className=\"nuevaAsignatura\"\n                        onClick={() => this.setState({ showInput: true })}\n                    >\n                        <PlusOutlined /> &nbsp; Añadir\n                    </Tag>\n                }\n                {this.state.showInput &&\n                    <CompleteAsignatura\n                        onSelect={(option) => this.addTachada(option)}\n                        options={this.props.asignaturasSeleccionadas.map((asignatura) => {\n                            return({ \"value\": asignatura });\n                        })}\n                    />\n                }\n                {this.state.isReady &&\n                    <Tag color=\"processing\"\n                        className=\"botonComprobacion\"\n                        onClick={() => this.comprobar()}\n                    >\n                       <PlayCircleOutlined /> &nbsp;\n                       Comprobar\n                    </Tag>\n                }\n                {this.state.isLoading &&\n                    <Tag color=\"processing\"\n                        className=\"botonComprobacion\"\n                        onClick={() => this.comprobar()}\n                    >\n                        <SyncOutlined spin />\n                        &nbsp;\n                        Procesando\n                    </Tag>\n                }\n                {this.state.isAfterLoading && this.state.message === \"Combinación válida\" &&\n                    <Tag color=\"success\"\n                        className=\"botonComprobacion\"\n                        style={{ width: \"150px\" }}\n                    >\n                        <CheckCircleOutlined />\n                        &nbsp;\n                        Combinación correcta\n                    </Tag>\n                }\n                {this.state.isAfterLoading && this.state.message !== \"Combinación válida\" &&\n                    <Tag color=\"error\"\n                        className=\"botonComprobacion\"\n                        style={{ width: \"160px\" }}\n                    >\n                        <CloseCircleOutlined />\n                        &nbsp;\n                        Combinación incorrecta\n                    </Tag>\n                }\n                {this.renderComprobacion()}\n            </div>\n        );\n    }\n}\n/*\n§ 7 (b)\nLos examinandos que, de acuerdo con el § 4 (3), se inscriban en un idioma\nextranjero nuevo en la fase introductoria ...\nEn este idioma extranjero deben contabilizarse los resultados\nde al menos dos semestres escolares de la fase de\ncualificación en la calificación global.\n*/\n/*\n§ 7 (c)\nDel área de idiomas extranjeros (incluido el idioma local y un idioma extranjero\nconforme al § 7 (b)) y de ciencias naturales en conjunto, se deben contabilizar al\nmenos catorce resultados semestrales. Si se contabilizan los resultados en una\nasignatura, se deberán computar los resultados de al menos dos semestres. En caso\nde que una asignatura obligatoria extracurricular aprobada sobre la base de una\nregulación de caso individual no se incluya en las asignaturas del examen Abitur\ndel examinando, el examinando deberá obtener más de 0 puntos en dicha\nasignatura en cualquier semestre de la fase de cualificación y el resultado obtenido\nen como mínimo el último semestre deberá computarse para la calificación.\n*/","import React from 'react';\nimport './App.css';\nimport Media from './Media.js';\nimport Seleccionar from './Seleccionar.js';\nimport Tachar from './Tachar.js';\n\nexport default class Notas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seleccionadas: [\n        \"Deutsch\", \"Español\", \"English\", \"Mathe\", \"Geschichte\", \"Filosofía\", \"Sport\"\n      ],\n      tachadas: [\n        \"Sport\"\n      ],\n    }\n  }\n\n  changeSeleccionadas(nuevas) {\n    this.setState({ seleccionadas: nuevas });\n  }\n\n  changeTachadas(nuevas) {\n    this.setState({ tachadas: nuevas });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"titulo\">\n          Selecciona tus asignaturas:\n        </div>\n        <Seleccionar\n          onChange={(nuevas) => this.changeSeleccionadas(nuevas)}\n        />\n        <div className=\"titulo\">\n          ¿Qué combinación de asignaturas puedo tachar?\n        </div>\n        <Tachar\n          asignaturasSeleccionadas={this.state.seleccionadas}\n          onChange={(nuevasTachadas) => this.changeTachadas(nuevasTachadas)}\n        />\n        <div className=\"titulo\">\n          ¿Qué media me queda tachando estas notas?\n        </div>\n        <Media\n          asignaturasSeleccionadas={this.state.seleccionadas}\n          tachadas={this.state.tachadas}\n        />\n      </div>\n    );\n  }\n}","import React from 'react';\nimport './App.css';\nimport Notas from './Notas.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"titulo\">\n        ¿Qué es esta página?\n      </div>\n      <div className=\"subtitulo\">\n        Esta página es una mini-herramienta que he hecho porque\n        no entendía como funcionaba el sistema de tachar notas para subir la media.\n        Me sigue pareciendo muy raro este sistema pero al menos ahora sé en qué asignaturas\n        tengo que esforzarme mucho este último semestre.\n        <br /><br />\n        Todo el código de esta página se basa en <a href=\"https://github.com/OscarBalcells/notas/blob/master/public/Normativa_para_la_obtención_del_Allgemeine_Hochschulreife.pdf\">este</a> documento y en <a href=\"https://github.com/OscarBalcells/notas/blob/master/public/Ordnung_zur_Erlangung_der_Allgemeinen_Hochschulreife an_Deutschen_Schulen_im_Ausland.pdf\">este otro</a> (lo mismo en alemán pero con tablas conversión) y en <a href=\"https://www.dsbilbao.org/oferta-educativa/equivalencia-sistema-educativo-aleman-y-espanol/\">esta</a> web. Puede haber algún error así que si te aburres y te apetece puedes leértelos para comprobar los resultados.\n      </div>\n      <Notas />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}